const rules = {
  'accessor-pairs': 'error',
  'array-callback-return': 'error',
  'default-case-last': 'error',
  'dot-notation': 'error',
  eqeqeq: 'error',
  'func-name-matching': 'error',
  'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
  'grouped-accessor-pairs': 'error',
  'max-classes-per-file': 'error',
  'new-cap': 'error',
  'no-alert': 'error',
  'no-array-constructor': 'error',
  'no-await-in-loop': 'error',
  'no-bitwise': 'error',
  'no-caller': 'error',
  'no-console': 'warn',
  'no-constant-binary-expression': 'error',
  'no-constructor-return': 'error',
  'no-debugger': 'warn',
  'no-duplicate-imports': 'error',
  'no-else-return': 'error',
  'no-empty-function': 'error',
  'no-eval': 'error',
  'no-extend-native': 'error',
  'no-extra-label': 'error',
  'no-implicit-coercion': 'error',
  'no-implicit-globals': 'error',
  'no-implied-eval': 'error',
  'no-iterator': 'error',
  'no-label-var': 'error',
  'no-labels': 'error',
  'no-lonely-if': 'error',
  'no-multi-assign': 'error',
  'no-new': 'error',
  'no-new-func': 'error',
  'no-new-object': 'error',
  'no-new-wrappers': 'error',
  'no-octal-escape': 'error',
  'no-promise-executor-return': 'error',
  'no-proto': 'error',
  'no-return-assign': 'error',
  'no-return-await': 'error',
  'no-script-url': 'error',
  'no-self-compare': 'error',
  'no-sequences': 'error',
  'no-throw-literal': 'error',
  'no-underscore-dangle': ['error', { allow: ['__schema'] }],
  'no-unneeded-ternary': 'error',
  'no-unreachable-loop': 'error',
  'no-unused-private-class-members': 'error',
  'no-unused-vars': [
    'error',
    {
      argsIgnorePattern: '^_',
      caughtErrorsIgnorePattern: '^_',
      ignoreRestSiblings: true,
      varsIgnorePattern: '^(React|_)',
    },
  ],
  'no-useless-call': 'error',
  'no-useless-computed-key': 'error',
  'no-useless-concat': 'error',
  'no-useless-rename': 'error',
  'no-useless-return': 'error',
  'no-var': 'error',
  'no-warning-comments': 'warn',
  'object-shorthand': 'error',
  'prefer-arrow-callback': 'error',
  'prefer-const': 'error',
  'prefer-destructuring': 'error',
  'prefer-exponentiation-operator': 'error',
  'prefer-object-has-own': 'error',
  'prefer-object-spread': 'error',
  'prefer-promise-reject-errors': 'error',
  'prefer-regex-literals': 'error',
  'prefer-rest-params': 'error',
  'prefer-spread': 'error',
  'prefer-template': 'error',
  radix: 'error',
  'require-await': 'error',
  'require-atomic-updates': 'error',
  'sort-imports': [
    'error',
    {
      ignoreDeclarationSort: true,
      memberSyntaxSortOrder: ['all', 'single', 'multiple', 'none'],
      allowSeparatedGroups: true,
    },
  ],
  'symbol-description': 'error',
  // 'react/button-has-type': 'error',
  // 'react/destructuring-assignment': ['error', 'always'],
  // 'react/function-component-definition': [
  //   'error',
  //   { namedComponents: 'function-declaration' },
  // ],
  // 'react-hooks/exhaustive-deps': 'error',
  // 'react/hook-use-state': 'error',
  // 'react/iframe-missing-sandbox': 'error',
  // 'react/jsx-boolean-value': 'error',
  // 'react/jsx-curly-brace-presence': [
  //   'error',
  //   { children: 'never', props: 'never', propElementValues: 'always' },
  // ],
  // 'react/jsx-equals-spacing': ['error', 'never'],
  // 'react/jsx-filename-extension': ['error', { extensions: ['.js', '.tsx'] }],
  // 'react/jsx-fragments': ['error', 'syntax'],
  // 'react/jsx-handler-names': 'error',
  // 'react/jsx-key': ['error', { warnOnDuplicates: true }],
  // 'react/jsx-no-constructed-context-values': 'error',
  // 'react/jsx-no-leaked-render': 'error',
  // 'react/jsx-no-script-url': 'error',
  // 'react/jsx-pascal-case': 'error',
  // 'react/jsx-sort-default-props': 'error',
  // 'react/no-access-state-in-setstate': 'error',
  // 'react/no-array-index-key': 'error',
  // 'react/no-danger': 'error',
  // 'react/no-namespace': 'error',
  // 'react/no-this-in-sfc': 'error',
  // 'react/no-typos': 'error',
  // 'react/no-unstable-nested-components': 'error',
  // 'react/no-unused-prop-types': 'error',
  // 'react/prefer-stateless-function': 'error',
  // 'react/prop-types': ['error', { ignore: ['children'] }],
  // 'react/self-closing-comp': 'error',
  // 'react/style-prop-object': 'error',
  // 'react/void-dom-elements-no-children': 'error',
  // 'jsx-a11y/anchor-is-valid': 'off',
}

export const configs = {
  recommended: {
    plugins: ["smile"],
    rules,
  },
};

export default 42;
